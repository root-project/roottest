# Test only if:
# * RDataFrame is available
# * PyROOT is available
# * pyspark is installed on that label for that python version
if (ROOT_dataframe_FOUND AND
    ROOT_pyroot_FOUND AND
    ROOT_test_distrdf_pyspark_FOUND)

file(COPY test_headers DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
file(COPY test_shared_libraries DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

# Define environment variables needed in all pyspark tests
set(PYSPARK_ENV_VARS PYSPARK_PYTHON=${PYTHON_EXECUTABLE_Development_Main})

if(MACOSX_VERSION VERSION_GREATER_EQUAL 10.13)
    # MacOS has changed rules about forking processes after 10.13
    # Running pyspark tests with XCode Python3 throws crashes with errors like:
    # `objc[17271]: +[__NSCFConstantString initialize] may have been in progress in another thread when fork() was called.`
    # This issue should have been fixed after Python 3.8 (see https://bugs.python.org/issue33725)
    # Indeed, any other Python 3.8+ executable does not show this crash. It is
    # specifically the XCode Python executable that triggers this.
    # For now, there seems no other way than this workaround,
    # which effectively sets the behaviour of `fork` back to MacOS 10.12
    list(APPEND PYSPARK_ENV_VARS OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES)
endif()

ROOTTEST_ADD_TEST(spark_test_friend_trees
                  MACRO test_friend_trees.py
                  ENVIRONMENT ${PYSPARK_ENV_VARS})

ROOTTEST_ADD_TEST(spark_test_histo_write 
                  MACRO test_histo_write.py
                  ENVIRONMENT ${PYSPARK_ENV_VARS})

ROOTTEST_ADD_TEST(spark_test_include_headers 
                  MACRO test_include_headers.py
                  ENVIRONMENT ${PYSPARK_ENV_VARS})

ROOTTEST_ADD_TEST(spark_test_inv_mass 
                  MACRO test_inv_mass.py
                  ENVIRONMENT ${PYSPARK_ENV_VARS})

ROOTTEST_ADD_TEST(spark_test_reducer_merge 
                  MACRO test_reducer_merge.py
                  ENVIRONMENT ${PYSPARK_ENV_VARS})

endif()
